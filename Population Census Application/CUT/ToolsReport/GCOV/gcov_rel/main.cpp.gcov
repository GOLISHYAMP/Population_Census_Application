        -:    0:Source:main.cpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:1
        -:    1:#include<iostream>
        -:    2:#include<string>
        -:    3:#include "main_menus.cpp"
        -:    4:#include "file_handling.cpp"
        -:    5:using namespace std;
        -:    6:
        -:    7:
function main called 1 returned 100% blocks executed 43%
        1:    8:int main()
        -:    9:{
        -:   10:
        -:   11:	//puting the login details like admin and password into list;
        1:   12:	system("clear");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   13:	file_to_list();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14:	string ch = "a";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   15:	void (*p[2])(){Dynaland_Zone_Wise_Registration, Dynaland_Central_Representative};
        3:   16:	while(ch != "3")
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 3
branch  4 taken 0 (fallthrough)
        -:   17:	{
        3:   18:		cout<<endl<<endl<<"************** Welcome to Dynaland Population Census Protal **************"<<endl<<endl<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 3
branch 13 taken 3 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 3
branch 16 taken 3 (fallthrough)
branch 17 taken 0 (throw)
        3:   19:		cout<<"--------- Main Menu ---------"<<endl<<endl<<"1. Dynaland Zone Wise Registration"<<endl<<"2. Dynaland Central Representative"<<endl<<"3. Exit"<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 3
branch 13 taken 3 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 3
branch 16 taken 3 (fallthrough)
branch 17 taken 0 (throw)
call   18 returned 3
branch 19 taken 3 (fallthrough)
branch 20 taken 0 (throw)
call   21 returned 3
branch 22 taken 3 (fallthrough)
branch 23 taken 0 (throw)
call   24 returned 3
branch 25 taken 3 (fallthrough)
branch 26 taken 0 (throw)
        3:   20:		cout<<endl<<"Enter your choice"<<endl<<endl;
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        -:   21:		
        3:   22:		cin.clear();
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   23:		cin.sync();
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   24:		getline(cin,ch);
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:   25:
        -:   26:		try
        -:   27:		{
        3:   28:			if(ch.length() != 1)
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
        -:   29:			{
    #####:   30:				throw ch;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   31:			}
        -:   32:		}
    =====:   33:		catch(string a)
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:   34:		{
    =====:   35:				cout<<"Enter a single digit only"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   36:				system("read n");
call    0 never executed
branch  1 never executed
branch  2 never executed
    =====:   37:				system("clear");
call    0 never executed
branch  1 never executed
branch  2 never executed
    =====:   38:				continue;
    =====:   39:		}
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   40:		try
        -:   41:		{
        3:   42:			if(isblank(ch[0]))
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 3
        -:   43:			{
    #####:   44:				throw ch;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   45:			}
        -:   46:		}
    =====:   47:		catch(string b)
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:   48:		{
    =====:   49:			cout<<"choice cannot be blank"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   50:			system("read n");
call    0 never executed
branch  1 never executed
branch  2 never executed
    =====:   51:			system("clear");
call    0 never executed
branch  1 never executed
branch  2 never executed
    =====:   52:			continue;
    =====:   53:		}
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   54:		
        -:   55:		try
        -:   56:		{
        3:   57:			if(isalpha(ch[0]))
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 3
        -:   58:			{
    #####:   59:				throw ch;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   60:			}
        -:   61:		
       3*:   62:		if(stoi(ch)<1 || stoi(ch)>4)
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 3 (fallthrough)
branch  4 taken 0
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
branch  8 taken 0 (fallthrough)
branch  9 taken 3
branch 10 taken 0 (fallthrough)
branch 11 taken 3
        -:   63:		{
    #####:   64:			cout<<"Invalid choice"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:   65:		}
        -:   66:		else
        -:   67:		{
        3:   68:			if(stoi(ch) == 3)
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 1 (fallthrough)
branch  4 taken 2
        -:   69:			{
        1:   70:				break;
        -:   71:			}
        2:   72:			p[stoi(ch)-1]();
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        -:   73:		}
        -:   74:		}
    =====:   75:		catch(string ch)
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:   76:		{
    =====:   77:			cout<<"Only number is allowed!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   78:		}
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   79:
        -:   80:	}
        -:   81:
        1:   82:	list_to_file();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   83:	system("clear");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   84:	
        1:   85:}
call    0 returned 1
call    1 never executed
