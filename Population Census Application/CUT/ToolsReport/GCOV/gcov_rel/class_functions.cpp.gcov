        -:    0:Source:class_functions.cpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:1
        -:    1:#include "class.hpp"
        -:    2:#include "validation_file.cpp"
        -:    3:#include<iostream>
        -:    4:#include<string>
        -:    5:using namespace std;
        -:    6:
        -:    7:
function _ZN7Citizen19Citizen_Data_CreateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 69%
        1:    8:void Citizen::Citizen_Data_Create(string zid)
        -:    9:{
        -:   10:	//create
        1:   11:	zone_id = zid;
call    0 returned 1
        -:   12:	while(1)
        -:   13:	{
        1:   14:		int flag = 0;
        1:   15:		cout<<"Enter your ssid (It will be a 9 digit number): "<<endl;
call    0 returned 1
call    1 returned 1
        1:   16:		cin.clear();
call    0 returned 1
        1:   17:		getline(cin,ssid);
call    0 returned 1
        1:   18:		if(check_ssid(ssid) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   19:		{
       46:   20:			for(Citizen c : li)  
call    0 returned 1
call    1 returned 1
call    2 returned 45
call    3 returned 45
branch  4 taken 45 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 45
call    7 returned 46
branch  8 taken 45
branch  9 taken 1 (fallthrough)
        -:   21:			{
       45:   22:				if(c.ret_ssid() == ssid)
call    0 returned 45
branch  1 taken 45 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 45
call    4 returned 45
branch  5 taken 0 (fallthrough)
branch  6 taken 45
        -:   23:				{
    #####:   24:					cout<<"This ssid "<<ssid<<" already exists!"<<endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
    #####:   25:					flag = 1;
        -:   26:				}
       45:   27:			}
call    0 returned 45
call    1 never executed
        1:   28:			if(flag == 0)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:   29:			{
        1:   30:				break;
        -:   31:			}
        -:   32:		}
    #####:   33:	}
        -:   34:	while(1)
        -:   35:	{
       1*:   36:		cout<<"Enter your name : "<<endl;
call    0 returned 1
call    1 returned 1
        1:   37:		cin.clear();
call    0 returned 1
        1:   38:		getline(cin,name);
call    0 returned 1
        1:   39:		if(check_name(name) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   40:                {
        1:   41:                        break;
        -:   42:                }
        -:   43:
        -:   44:	}
        -:   45:	while(1)
        -:   46:	{
       1*:   47:		cout<<"Enter your age : "<<endl;
call    0 returned 1
call    1 returned 1
        1:   48:		cin.clear();
call    0 returned 1
        1:   49:		getline(cin,age);
call    0 returned 1
        1:   50:		if(check_age(age) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   51:                {
        1:   52:                        break;
        -:   53:                }
        -:   54:	}
        -:   55:	while(1)
        -:   56:	{
       1*:   57:		cout<<"Enter your gender (m : male,  f : female, t : transgender) : "<<endl;
call    0 returned 1
call    1 returned 1
        -:   58:		
        1:   59:		cin.clear();
call    0 returned 1
        1:   60:		getline(cin,gender);
call    0 returned 1
        1:   61:		if(check_gender(gender) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:   62:                {
       1*:   63:			if(gender == "m" || gender == "M")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        -:   64:			{
        1:   65:				gender = "male";
call    0 returned 1
        -:   66:			}
       1*:   67:			if(gender == "f" || gender == "F")
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        -:   68:			{
    #####:   69:				gender = "female";
call    0 never executed
        -:   70:			}
       1*:   71:			if(gender == "t" || gender == "T")
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        -:   72:			{
    #####:   73:				gender = "transgender";
call    0 never executed
        -:   74:			}
        1:   75:                        break;
        -:   76:                }
        -:   77:
        -:   78:		//check gender male,female, transgender
        -:   79:	}
        -:   80:
        -:   81:	while(1)
        -:   82:	{
       1*:   83:		cout<<"Enter your address : "<<endl;
call    0 returned 1
call    1 returned 1
        1:   84:		cin.clear();
call    0 returned 1
        1:   85:		getline(cin,address); //       mumbai
call    0 returned 1
       1*:   86:		if(address.length() == 0)
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   87:		{
    #####:   88:			cout<<"address cannot be blank"<<endl;
call    0 never executed
call    1 never executed
    #####:   89:			continue;
        -:   90:		}
       1*:   91:		else if(isblank(address[0]))
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:   92:		{
    #####:   93:			cout<<"address cannot start with blank space"<<endl;
call    0 never executed
call    1 never executed
    #####:   94:			continue;
        -:   95:		}
        -:   96:		else
        -:   97:		{
        1:   98:			break;
        -:   99:		}
        -:  100:	}
        -:  101:	
        -:  102:	while(1)
        -:  103:	{
       1*:  104:		cout<<"Enter your qualification (If none please enter NA): "<<endl;
call    0 returned 1
call    1 returned 1
        1:  105:		cin.clear();
call    0 returned 1
        1:  106:		getline(cin,qualification);
call    0 returned 1
        1:  107:		if(check_qualification(qualification) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  108:                {
        1:  109:			if(qualification == "NA")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  110:			{
    #####:  111:				literate = "NO";
call    0 never executed
        -:  112:			}
        -:  113:			else
        -:  114:			{
        1:  115:				literate = "YES";
call    0 returned 1
        -:  116:			}
        1:  117:                        break;
        -:  118:                }
        -:  119:
        -:  120:		//check qualification if it is NA put literate as NO or else YES
        -:  121:	}
        -:  122:	while(1)
        -:  123:	{
       1*:  124:		cout<<"Enter your occupation : "<<endl;
call    0 returned 1
call    1 returned 1
        1:  125:		cin.clear();
call    0 returned 1
        1:  126:		getline(cin,occupation); 
call    0 returned 1
        1:  127:		if(check_occupation(occupation) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  128:                {
        1:  129:                        break;
        -:  130:                }
        -:  131:
        -:  132:		//check only characters
        -:  133:	}
        -:  134:	while(1)
        -:  135:	{
       1*:  136:		cout<<"Enter your annual income : "<<endl;
call    0 returned 1
call    1 returned 1
        -:  137:		
        1:  138:		cin.clear();
call    0 returned 1
        1:  139:		getline(cin,annual_income); 
call    0 returned 1
        1:  140:		if(check_annual_income(annual_income) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  141:                {
        1:  142:                        break;
        -:  143:                }
        -:  144:
        -:  145:		//check income numeric or not
        -:  146:	}
        -:  147:	while(1)
        -:  148:	{
       1*:  149:		cout<<"Enter no_of_dependants : "<<endl;
call    0 returned 1
call    1 returned 1
        -:  150:		
        1:  151:		cin.clear();
call    0 returned 1
        1:  152:		getline(cin,no_of_dependants); 
call    0 returned 1
        1:  153:		if(check_dependants(no_of_dependants) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  154:                {
        1:  155:                        break;
        -:  156:                }
        -:  157:
        -:  158:		//check number
        -:  159:	}
        -:  160:	while(1)
        -:  161:	{
       1*:  162:		cout<<"Enter your house type ( o : own or r : rented) : "<<endl;
call    0 returned 1
call    1 returned 1
        -:  163:		
        1:  164:		cin.clear();
call    0 returned 1
        1:  165:		getline(cin,house_type); //       mumbai
call    0 returned 1
        1:  166:		if(check_house_type(house_type) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
call    8 never executed
        -:  167:                {
       1*:  168:			if(house_type == "o" || house_type == "O")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        -:  169:			{
        1:  170:				house_type = "own";
call    0 returned 1
        -:  171:			}
       1*:  172:			if(house_type == "r" || house_type == "R")
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        -:  173:			{
    #####:  174:				house_type = "rented";
call    0 never executed
        -:  175:			}
        1:  176:                        break;
        -:  177:                }
        -:  178:
        -:  179:		//check only own or rented
        -:  180:	}
        -:  181:	while(1)
        -:  182:	{
       1*:  183:		cout<<"Enter the area type ( r : rural or u : urban) : "<<endl;
call    0 returned 1
call    1 returned 1
        -:  184:		
        1:  185:		cin.clear();
call    0 returned 1
        1:  186:		getline(cin,area_type); 
call    0 returned 1
        1:  187:		if(check_area_type(area_type) == 1)
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
call    7 never executed
        -:  188:                {
       1*:  189:			if(area_type == "r" || area_type == "R")
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        -:  190:			{
        1:  191:				area_type = "rural";
call    0 returned 1
        -:  192:			}
        -:  193:			
       1*:  194:			if(area_type == "u" || area_type == "U")
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        -:  195:			{
    #####:  196:				area_type = "urban";
call    0 never executed
        -:  197:			}
        1:  198:                        break;
        -:  199:                }
        -:  200:
        -:  201:		//check rural or urban
        -:  202:	}
        -:  203:	
        -:  204:	
        1:  205:}
        -:  206:
function _ZN7Citizen17Citizen_Data_ViewEv called 1 returned 100% blocks executed 100%
        1:  207:void Citizen::Citizen_Data_View()
        -:  208:{
        -:  209:	//view
        -:  210:	//cout<<"Hello I am class View"<<endl;
        1:  211:	system("clear");
call    0 returned 1
        1:  212:	cout<<endl<<endl<<"************ Details of the Citizen ***************"<<endl<<endl<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
        1:  213:	cout<<"Zone id : "<<zone_id<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  214:	cout<<"SSID : "<<ssid<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  215:	cout<<"Name : "<<name<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  216:	cout<<"Age : "<<age<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  217:	cout<<"Gender : "<<gender<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  218:	cout<<"Address : "<<address<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  219:	cout<<"Qualification : "<<qualification<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  220:	cout<<"Literate : "<<literate<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  221:	cout<<"Occupation : "<<occupation<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  222:	cout<<"Annual Income : "<<annual_income<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  223:	cout<<"Number of Dependents : "<<no_of_dependants<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  224:	cout<<"House Type : "<<house_type<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  225:	cout<<"Area Type : "<<area_type<<endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  226:        cout<<"***********************************************"<<endl;
call    0 returned 1
call    1 returned 1
        1:  227:	system("read n");
call    0 returned 1
        1:  228:	system("clear");
call    0 returned 1
        -:  229:	
        1:  230:}
        -:  231:
        -:  232:
        -:  233:
function _ZN7Citizen19Citizen_Data_ModifyENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  234:void Citizen::Citizen_Data_Modify(string ch)
        -:  235:{
        -:  236:	//modify
    #####:  237:	Citizen_Data_View();
call    0 never executed
    #####:  238:	 cout<<"Modify Citizen Details"<<endl;
call    0 never executed
call    1 never executed
    #####:  239:	if(ch=="1")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  240:	{
        -:  241:		while(1)
        -:  242:		{
    #####:  243:			cout<<"Enter new zone id : "<<endl;
call    0 never executed
call    1 never executed
        -:  244:				
    #####:  245:			cin.clear();
call    0 never executed
    #####:  246:			getline(cin,zone_id); 
call    0 never executed
    #####:  247:			if(check_zoneid(zone_id)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  248:			{
    #####:  249:				system("clear");
call    0 never executed
    #####:  250:				break;
        -:  251:			}
        -:  252:		}
        -:  253:	}
        -:  254:	
    #####:  255:	else if(ch=="2")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  256:	{   
        -:  257:		while(1)
        -:  258:		{   
    #####:  259:			cout<<"Enter new name : "<<endl;
call    0 never executed
call    1 never executed
        -:  260:			
    #####:  261:			cin.clear();
call    0 never executed
    #####:  262:			getline(cin,name); 
call    0 never executed
    #####:  263:			if(check_name(name)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  264:			{   
    #####:  265:				system("clear");
call    0 never executed
    #####:  266:				break;
        -:  267:			}   
        -:  268:		}   
        -:  269:	}  
        -:  270:	
        -:  271:	
    #####:  272:	else if(ch=="3")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  273:	{   
        -:  274:		while(1)
        -:  275:		{   
    #####:  276:			cout<<"Enter new age : "<<endl;
call    0 never executed
call    1 never executed
        -:  277:			
    #####:  278:			cin.clear();
call    0 never executed
    #####:  279:			getline(cin,age); 
call    0 never executed
    #####:  280:			if(check_age(age)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  281:			{   
    #####:  282:				system("clear");
call    0 never executed
    #####:  283:				break;
        -:  284:			}   
        -:  285:		}   
        -:  286:	}  
        -:  287:	
        -:  288:
    #####:  289:	else if(ch=="4")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  290:	{  
        -:  291:		while(1)
        -:  292:		{
    #####:  293:			cout<<"Enter new address : "<<endl;
call    0 never executed
call    1 never executed
        -:  294:			
        -:  295:
    #####:  296:			cin.clear();
call    0 never executed
    #####:  297:			getline(cin,address); //       mumbai
call    0 never executed
    #####:  298:			if(address.length() == 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  299:			{
    #####:  300:				cout<<"address cannot be blank"<<endl;
call    0 never executed
call    1 never executed
    #####:  301:				continue;
        -:  302:			}
    #####:  303:			else if(isblank(address[0]))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  304:			{
    #####:  305:				cout<<"address cannot start with blank space"<<endl;
call    0 never executed
call    1 never executed
    #####:  306:				continue;
        -:  307:			}
        -:  308:			else
        -:  309:			{
    #####:  310:				system("clear");
call    0 never executed
    #####:  311:				break;
        -:  312:			}
        -:  313:		}
        -:  314:	}
        -:  315:	
        -:  316:
    #####:  317:	else if(ch=="5")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  318:	{   
        -:  319:		while(1)
        -:  320:		{   
    #####:  321:			cout<<"Enter new qualification : "<<endl;
call    0 never executed
call    1 never executed
        -:  322:			
    #####:  323:			cin.clear();
call    0 never executed
    #####:  324:			getline(cin,qualification);
call    0 never executed
    #####:  325:			if(check_qualification(qualification)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  326:			{   
    #####:  327:			if(qualification == "NA")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  328:                          {
    #####:  329:                                  literate = "NO";
call    0 never executed
        -:  330:                          }
        -:  331:                          else
        -:  332:                         {
    #####:  333:                                  literate = "YES";
call    0 never executed
        -:  334:                          }
        -:  335:
    #####:  336:				system("clear");
call    0 never executed
    #####:  337:				break;
        -:  338:			}   
        -:  339:		}   
        -:  340:	}  
        -:  341:	
        -:  342:
    #####:  343:	else if(ch=="6")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  344:	{   
        -:  345:		while(1)
        -:  346:		{   
    #####:  347:			cout<<"Enter new occupation : "<<endl;
call    0 never executed
call    1 never executed
        -:  348:			
    #####:  349:			cin.clear();
call    0 never executed
    #####:  350:			getline(cin,occupation); 
call    0 never executed
    #####:  351:			if(check_occupation(occupation)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  352:			{   
    #####:  353:				system("clear");
call    0 never executed
    #####:  354:				break;
        -:  355:			}   
        -:  356:		}   
        -:  357:	}  
        -:  358:
        -:  359:	
    #####:  360:	else if(ch=="7")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  361:	{   
        -:  362:		while(1)
        -:  363:		{   
    #####:  364:			cout<<"Enter new annual income : "<<endl;
call    0 never executed
call    1 never executed
        -:  365:			
    #####:  366:			cin.clear();
call    0 never executed
    #####:  367:			getline(cin,annual_income);
call    0 never executed
    #####:  368:			if(check_annual_income(annual_income)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  369:			{   
    #####:  370:				system("clear");
call    0 never executed
    #####:  371:				break;
        -:  372:			}   
        -:  373:		}   
        -:  374:	}  
        -:  375:	
        -:  376:
    #####:  377:	else if(ch=="8")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  378:	{   
        -:  379:		while(1)
        -:  380:		{   
    #####:  381:			cout<<"Enter new number of dependants : "<<endl;
call    0 never executed
call    1 never executed
        -:  382:			
    #####:  383:			cin.clear();
call    0 never executed
    #####:  384:			getline(cin,no_of_dependants); 
call    0 never executed
    #####:  385:			if(check_dependants(no_of_dependants)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  386:			{   
    #####:  387:				system("clear");
call    0 never executed
    #####:  388:				break;
        -:  389:			}   
        -:  390:		}   
        -:  391:	}  
        -:  392:
        -:  393:
    #####:  394:	else if(ch=="9")
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  395:	{   
        -:  396:		while(1)
        -:  397:		{   
    #####:  398:			cout<<"Enter new house type (o : own or r : rented): "<<endl;
call    0 never executed
call    1 never executed
        -:  399:			
    #####:  400:			cin.clear();
call    0 never executed
    #####:  401:			getline(cin,house_type); 
call    0 never executed
    #####:  402:			if(check_house_type(house_type)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
        -:  403:			{   
    #####:  404:			if(house_type == "o" || house_type == "O")
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:  405:			{
    #####:  406:				house_type = "own";
call    0 never executed
        -:  407:			}
    #####:  408:			if(house_type == "r" || house_type == "R")
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:  409:			{
    #####:  410:				house_type = "rented";
call    0 never executed
        -:  411:			}
    #####:  412:				system("clear");
call    0 never executed
    #####:  413:				break;
        -:  414:			}   
        -:  415:		}   
        -:  416:	}  
        -:  417:
        -:  418:
        -:  419:	//if(ch=="10")
        -:  420:	else
        -:  421:	{   
        -:  422:		while(1)
        -:  423:		{   
    #####:  424:			cout<<"Enter new area type ( u : urban || r : rural): "<<endl;
call    0 never executed
call    1 never executed
        -:  425:			
    #####:  426:			cin.clear();
call    0 never executed
    #####:  427:			getline(cin,area_type); 
call    0 never executed
    #####:  428:			if(check_area_type(area_type)==1)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
        -:  429:			{   
    #####:  430:			if(area_type == "r" || area_type == "R")
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:  431:			{
    #####:  432:				area_type = "rural";
call    0 never executed
        -:  433:			}
        -:  434:			
    #####:  435:			if(area_type == "u" || area_type == "U")
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:  436:			{
    #####:  437:				area_type = "urban";
call    0 never executed
        -:  438:			}
    #####:  439:				system("clear");
call    0 never executed
    #####:  440:				break;
        -:  441:			}   
        -:  442:		}   
        -:  443:	}
        -:  444:	
        -:  445:		
    #####:  446:}
        -:  447:
        -:  448:
function _ZN7Citizen14Initial_CreateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_S5_S5_S5_S5_S5_S5_S5_S5_S5_S5_S5_ called 45 returned 100% blocks executed 100%
       45:  449:void Citizen :: Initial_Create(string id, string cid, string n, string a, string g, string add, string q, string l, string o, string ai, string d, string h, string at)
        -:  450:{
       45:  451:	zone_id = id;
call    0 returned 45
       45:  452:	ssid = cid;
call    0 returned 45
       45:  453:	name = n;
call    0 returned 45
       45:  454:	age = a;
call    0 returned 45
       45:  455:	gender = g;
call    0 returned 45
       45:  456:	address = add;
call    0 returned 45
       45:  457:	qualification = q;
call    0 returned 45
       45:  458:	literate = l;
call    0 returned 45
       45:  459:	occupation = o;
call    0 returned 45
       45:  460:	annual_income  = ai;
call    0 returned 45
       45:  461:	no_of_dependants = d;
call    0 returned 45
       45:  462:	house_type = h;
call    0 returned 45
       45:  463:	area_type = at;
call    0 returned 45
       45:  464:}
        -:  465:
        -:  466:
        -:  467:
        -:  468:
        -:  469:
        -:  470:
        -:  471:
        -:  472:
        -:  473:
        -:  474:
        -:  475:
        -:  476:
        -:  477:
        -:  478:
        -:  479:
        -:  480:
